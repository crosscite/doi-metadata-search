%a{:href => 'http://doi.org/' + item.doi}
  %i.fa.fa-external-link
  = "http://doi.org/#{item.doi}"
%a.cite-link.nowrap{:href => "javascript:showCiteBox('#{item.doi}', '#{item.title_escaped}');"}
  %i.fa.fa-quote-left
  Cite

- if signed_in?
  - if item.claim_status == "none"
    %span.well-transparent.claim-none{id: item.doi, data: { doi: item.doi, orcid: current_user.orcid, "api-key" => current_user.api_key }}
      %img{src: '/images/orcid_16x16.gif'}
      %span Add to ORCID
  - elsif item.claim_status == "waiting"
    %span.well-transparent.claim-waiting{id: item.doi, data: { doi: item.doi }}
      %img{src: '/images/orcid_16x16.gif'}
      %span Queued for your ORCID record
  - elsif item.claim_status == "done"
    %span.well-transparent.claim-ok{id: item.doi, data: { doi: item.doi }}
      %img{src: '/images/orcid_16x16.gif'}
      %span In your ORCID record

- if item.grouped_related.present?
  - item.grouped_related.each do |key, array|
    %span.dropdown.nowrap
      %a.btn.btn-default.btn-xs.dropdown-toggle.boxed{:role => 'button', 'data-toggle' => 'dropdown', :href => '#'}
        =uncamelize(key) + " #{array.count}"
      %ul.dropdown-menu.dropdown-menu-right{role: 'menu'}
        - array.each do |related|
          %li
            %a.cite-link{href: related_link(related[:id])}
              %h5
                = related[:title]
              = author_format(related[:author])
              %br
              Published
              = issued_text(related[:issued]) + container_text(related[:container_title])
              = "Link via #{related[:source]}"
              %br
              %i.fa.fa-external-link
              = related[:id]

