!!!
%html
  %head
    %title#site-title{'data-conneg': ENV['DATA_URL'] }
      = ENV['SITE_TITLE']

    %meta{name: 'viewport', content: 'width=device-width, initial-scale=1.0'}

    %link{:rel => 'stylesheet', :href => '//maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css', :type => 'text/css'}
    %link{:rel => 'stylesheet', :href => "//fonts.googleapis.com/css?family=Raleway:400,600,400italic,600italic", :type => 'text/css'}
    %link{:rel => 'stylesheet', :href => "//cdnjs.cloudflare.com/ajax/libs/cc-icons/1.2.1/css/cc-icons.min.css", :type => 'text/css'}
    %script{:src=>"https://unpkg.com/vue/dist/vue.min.js"}
    %script{:type => 'text/javascript', :src => '/javascripts/datacite-components.min.js'}

    - if ENV['CDN_URL']
      %link{:rel => 'stylesheet', :href => "#{ENV['CDN_URL']}/stylesheets/datacite.css", :type => 'text/css'}
    - else
      %link{:rel => 'stylesheet', :href => "/stylesheets/#{ENV['RA']}.css", :type => 'text/css'}

    %link{:rel => 'stylesheet', :href => "/stylesheets/usage.css", :type => 'text/css'}

    - if @work.present? && @work[:data].present?
      - id = @work.fetch(:data, {}).fetch("id", nil)
      - attributes = @work.fetch(:data, {}).fetch("attributes", {})
      = work_as_meta_tag(id: id, attributes: attributes)
    
    - if @work.present? && @work[:schema_org].present?
      %script{:type => 'application/ld+json'}
        = @work[:schema_org]
  
    %script{:type => 'text/javascript'}
      :plain
        var _prum = [['id', '5a1420c253eca68350edbf98'], ['mark', 'firstbyte', (new Date()).getTime()]];
        (function() {
          var s = document.getElementsByTagName('script')[0], p = document.createElement('script');
          p.async = 'async';
          p.src = '//rum-static.pingdom.net/prum.min.js';
          s.parentNode.insertBefore(p, s);
        })();

  %body
    .notifications.top-left
    = yield

    %script{:type => 'text/javascript', :src => '//code.jquery.com/jquery-2.2.3.min.js'}
    %script{:type => 'text/javascript', :src => '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js'}
    %script{:type => 'text/javascript', :src => '/javascripts/citebox.js'}
    = include_gon()
    %script{:type => 'text/javascript', :src => '/javascripts/usage_bar_chart.js'}      
    %script{:type => 'text/javascript', :src => '/javascripts/usersnap.js'}
    %script{:type => 'text/javascript', :src => '//cdn.statuspage.io/se-v2.js'}
    %script{type: "text/x-mathjax-config"}
      :plain
        MathJax.Hub.Config({
          tex2jax: {
            inlineMath: [["$","$"],["\\(","\\)"]]
          }
        });
    %script{:type => 'text/javascript', :src => 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS_CHTML'}
    %script{:type => 'text/javascript', :src => 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.12/clipboard.min.js'}
    %script{:type => 'text/javascript', :src => '/javascripts/itemlist.js'}
    - if ENV['CDN_URL']
      %script{:type => 'text/javascript', :src => "#{ENV['CDN_URL']}/javascripts/default.js"}
    - if ENV['GABBA_COOKIE']
      %script{:type => 'text/javascript', :src => '/javascripts/ga.js'}
      %script{:async => "", :src => "https://www.googletagmanager.com/gtag/js?id=#{ENV['GABBA_COOKIE']}"}
      :javascript
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
        
          gtag('config', "#{ENV['GABBA_COOKIE']}",{
            'custom_map': {
               'dimension1':'doi',
               'dimension2':'views',
               'dimension3':'downloads',
               'dimension4':'resolutions',
               'dimension5':'citations'
            },
            'linker': {
              'domains': ['https://search.datacite.org', 'https://doi.datacite.org']
            }
          });
        
        

