.panel.facets
  - if @meta["resource-types"].present?
    .panel-body
      %h4
        Resource Types
      %ul
        - @meta["resource-types"].each do |f|
          - if params['resource-type-id'] == f.first
            %li.active
              %a{:href => works_query(params.except('resource-type-id'))}
                %i.fa.fa-check-square-o
              .facet-title
                = resource_type_title(@resource_types, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => works_query(params.merge('resource-type-id' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = resource_type_title(@resource_types, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix

  - if @meta["years"].present?
    .panel-body
      %h4
        Publication Year
      %ul
        - @meta["years"].each do |f|
          - if params['year'] == f.first
            %li.active
              %a{:href => works_query(params.except('year'))}
                %i.fa.fa-check-square-o
              .facet-title
                = f.first
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => works_query(params.merge('year' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = f.first
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix

  - if @meta["publishers"].present? && params[:model] != "data-centers" && params[:model] != "sources"
    .panel-body
      %h4
        Data Centers
      %ul
        - @meta["publishers"].each do |f|
          - if params['publisher-id'] == f.first
            %li.active
              %a{:href => works_query(params.except('publisher-id'))}
                %i.fa.fa-check-square-o
              .facet-title
                = publisher_title(@publishers, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => works_query(params.merge('publisher-id' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = publisher_title(@publishers, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix

  - if @meta["sources"].present? && params[:model] != "sources"
    .panel-body
      %h4
        Sources
      %ul
        - @meta["sources"].sort_by { |k,v| -v }.each do |f|
          - if params['source-id'] == f.first
            %li.active
              %a{:href => works_query(params.except('source-id'))}
                %i.fa.fa-check-square-o
              .facet-title
                = source_title(@sources, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => works_query(params.merge('source-id' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = source_title(@sources, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix

  - if @meta["relation-types"].present?
    .panel-body
      %h4
        Relation Types
      %ul
        - @meta["relation-types"].sort_by { |k,v| -v }.each do |f|
          - if params['relation-type-id'] == f.first
            %li.active
              %a{:href => works_query(params.except('relation-type-id'))}
                %i.fa.fa-check-square-o
              .facet-title
                = relation_type_title(@relation_types, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => works_query(params.merge('relation-type-id' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = relation_type_title(@relation_types, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
  -#  # Claimed Works Facet, commit: 45ece1be7f1f2a905c3e4780b7bc6e22e2e7f048
  -# - if @meta["contribution-sources"].present? && params[:model] != "sources"
  -#   .panel-body
  -#     %h4
  -#       Claimed Works by Source
  -#     %ul
  -#       - @meta["contribution-sources"].sort_by { |k,v| -v }.each do |f|
  -#         - if params['source-id'] == f.first
  -#           %li.active
  -#             %a{:href => contributions_query(params.except('source-id'))}
  -#               %i.fa.fa-check-square-o
  -#             .facet-title
  -#               = source_title(@contribution_sources, f.first)
  -#             %span.number.pull-right= "#{number_with_delimiter(f.last)}"
  -#             .clearfix
  -#         - else
  -#           %li
  -#             %a{:href => contributions_query(params.merge('source-id' => f.first))}
  -#               %i.fa.fa-square-o
  -#             .facet-title
  -#               = source_title(@contribution_sources, f.first)
  -#             %span.number.pull-right= "#{number_with_delimiter(f.last)}"
  -#             .clearfix

  - if @meta["publishers"].present? && params[:model] == "sources"
    .panel-body
      %h4
        Data Centers
      %ul
        - @meta["publishers"].each do |f|
          - if params['publisher-id'] == f.first
            %li.active
              %a{:href => contributions_query(params.except('publisher-id'))}
                %i.fa.fa-check-square-o
              .facet-title
                = publisher_title(@publishers, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
          - else
            %li
              %a{:href => contributions_query(params.merge('publisher-id' => f.first))}
                %i.fa.fa-square-o
              .facet-title
                = publisher_title(@publishers, f.first)
              %span.number.pull-right= "#{number_with_delimiter(f.last)}"
              .clearfix
