- attributes = item.fetch("attributes", {})
- type = attributes.fetch("resource-type-id", nil)
- includes = @works.present? ? @works[:included] : @work[:included]
- work_types = Array.wrap(includes).select { |item| item["type"] == "work-types" }
- sources = Array.wrap(@works[:meta].to_h.fetch("sources", nil))
- new_params = params[:model] == "works" && params["id"] == attributes.fetch("doi", nil) ? params.merge(external_link: true) : params
- title = attributes["title"].to_s.gsub(/"/, '\"')
- if @work.present? && attributes["views-over-time"].present?
  - gon.chart_views = attributes["views-over-time"]
  - gon.yop = attributes.fetch("published", "").to_i
- if @work.present? && attributes["downloads-over-time"]
  - gon.chart_downloads = attributes["downloads-over-time"]
  - gon.yop = attributes.fetch("published", "").to_i
-# - if @work.present? && citations.positive?
-#   - has_duplicated = citations != Array.wrap(metrics.to_h.dig(:citations_histogram, "count")) ? true : false
-#   - citations_chart = remove_duplicated_counts(citations,metrics.fetch(:citations_histogram, {}), attributes.fetch("published", nil).to_i )
-#   - gon.chart_citations = citations_chart.fetch("years", [])
-#   - gon.yop = attributes.fetch("published", nil).to_i

.panel.panel-default
  .panel-body
    %h3.work
      %a{:id => "title-link", :href => works_action(item, new_params), :title => "Go to landing page"}
        = attributes["title"]
    - if attributes["author"].present?
      = author_format(attributes["author"])
    .metadata
      = metadata_format(attributes, work_types: work_types)
    - if attributes["description"].present?
      .description
        = description_format(attributes["description"])
    - if attributes["license"].present?
      .license
        %a{:href => attributes["license"]}
          = license_img(attributes["license"])

  .panel-footer
    - if (attributes["citation-count"].to_i + attributes["view-count"].to_i + attributes["download-count"].to_i).zero?
      %span.metrics{id: "summary-citations"}
        .fa.fa-info-circle 
        No citations were reported. No usage information was reported.
    - else
      - if attributes["citation-count"].to_i.positive?
        %span.metrics{id: "summary-citations"}
          .fa.fa-quote-left
          = pluralize(attributes["citation-count"].to_i, "citation")
      - else
        %span.metrics
          .fa.fa-info-circle 
          No citations were reported. 
      - if (attributes["view-count"].to_i + attributes["download-count"].to_i).positive?
        %span.metrics{id: "summary-views"}
          .fa.fa-eye
          = pluralize(attributes["view-count"].to_i, "view")
        %span.metrics{id: "summary-downloads"}
          .fa.fa-download
          = pluralize(attributes["download-count"].to_i, "download")
      - else
        %span.metrics{id: "summary-views"}
          .fa.fa-info-circle 
          No usage information was reported.

  - if @work.present? && @work.fetch(:data, {}).fetch("attributes", {}).fetch("related-identifiers", nil).present? && @work.fetch(:data, {}).fetch("id", "work") != item["id"]
    .panel-footer
      = relation_type_title(@work.fetch(:data, {}).fetch("attributes", {}).fetch("related-identifiers"), item["id"]) + " " + @work.fetch(:data, {}).fetch("id", nil)

  .panel-footer.item-links
    %a{:id => "doi-link", :href => item["id"], :title => "Go to landing page"}
      %i.fa.fa-external-link
      = item["id"]
    - if attributes["doi"].present?
      %a.cite-link.nowrap{href: '#', onclick: "showCiteBox(\"#{attributes["doi"]}\", \"#{title}\"); return false;"}
        %i.fa.fa-quote-left
        Cite

    - if user_signed_in? && is_person?
      = haml :'works/claim', locals: { item: item }

- if @work.present? && (attributes["citation-count"].to_i + attributes["view-count"].to_i + attributes["download-count"].to_i).positive?
  = haml :'works/visualisation', locals: { attributes: attributes }
- if @work.present?
  - data_center = @work[:included].find { |i| i.fetch("type", nil) == "data-centers" }
  - client_name = data_center.fetch("attributes", {}).fetch("title", nil)
  = haml :'works/citations', locals: { attributes: attributes, client_name: client_name }
- if @work.present? && (attributes["view-count"].to_i + attributes["download-count"].to_i).zero?
  .panel-body.alert.alert-simple-info
    = "This data repository is not currently reporting usage information. For information on how your repository can submit usage information, please see"
    %a{href: 'https://support.datacite.org/docs/views-and-downloads'}
      our documentation.
