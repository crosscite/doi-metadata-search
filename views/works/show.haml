= haml :"#{ENV['RA']}/header", locals: { page: {} }

- data_center = @work[:included].find { |i| i.fetch("type", nil) == "data-centers" }
- member = @work[:included].find { |i| i.fetch("type", nil) == "members" }

.container-fluid
  .content
    .row
      .col-md-9#content-work
        - if @work[:data].present?
          = haml :'works/item', locals: { item: @work[:data] }
        - elsif @work[:errors].present?
          %div.alert.alert-warning
            = @work[:errors].first.fetch("title", "")

      - if @work[:data].present?
        .col-md-3
          .panel.facets
            .panel-body.metadata
              %h5
                Data Center
              .data-center
                %a{href: "/data-centers/#{data_center.fetch('id')}"}
                  = data_center.fetch("attributes", {}).fetch("title", nil)
              - if member.present?
                %h5
                  Member
                .registration_agency
                  %a{href: "/members/#{member.fetch('id')}"}
                    = member.fetch("attributes", {}).fetch("title", nil)
              %h5
                Download

              %a{href: ENV['DATA_URL'] + "/application/vnd.datacite.datacite+xml/#{@work[:data].dig('attributes', 'doi')}", id: "xml_download"}
                DataCite XML
              %br
              %a{href: ENV['DATA_URL'] + "/application/vnd.schemaorg.ld+json/#{@work[:data].dig('attributes', 'doi')}"}
                JSON-LD
              %br
              %a{href: ENV['DATA_URL'] + "/application/rdf+xml/#{@work[:data].dig('attributes', 'doi')}"}
                RDF XML
              %br
              %a{href: ENV['DATA_URL'] + "/application/vnd.citationstyles.csl+json/#{@work[:data].dig('attributes', 'doi')}"}
                Citeproc
              %br
              %a{href: ENV['DATA_URL'] + "/application/x-research-info-systems/#{@work[:data].dig('attributes', 'doi')}"}
                RIS
              %br
              - if @work[:data].dig('attributes', 'media').present?
                - @work[:data].dig('attributes', 'media').each do |media|
                  %a{href: media['url'], id: media['media-type'] }
                    - if settings.chem_mime_types.find{ |item| item["type"] == media['media-type'] }.presence
                      = settings.chem_mime_types.find{ |item| item["type"] == media['media-type'] }['description'].presence ||  media['media-type']
                    - else
                      = media['media-type']
                    %br
          .panel.tags
            .panel-body
              .bottom-teaser.cf
                .isLeft
                  %h5
                    %span
                      Share on
                  - settings.social.each do |social|
                    - href = social['share_url'] + social['share_title'] + (@work.fetch("attributes", {}).fetch("title", nil)).to_s + social['share_link'] + @work.fetch("id", "")
                    %a{href: href, class: "icon-#{social['icon']} share", onclick: "window.open(this.href, '#{social['icon']}-share', 'width=550,height=255');return false;"}
                      %i.fa{class: "fa-#{social['icon']}"}
                      %span.hidden
                        = social['icon']

      - if @works[:data].length > 0
        / - if @works[:data].length > 1
        /   .col-md-9
        /     = haml :'works/search'

        .col-md-9.panel-list#content-works
          %h3.results
            = pluralize(number_with_delimiter(@works[:meta]['total']), "Related Work")
          - @works[:data].each do |item|
            = haml :'works/item', locals: { item: item }

          .text-center
            = will_paginate @works[:data], renderer: BootstrapPagination::Sinatra, inner_window: 1

        .col-md-3
          = haml :'works/facets'

= haml :cite_box

= haml :"#{ENV['RA']}/footer"
