---
http_interactions:
- request:
    method: get
    uri: https://api.test.datacite.org/dois?exclude_registration_agencies=true&fields%5Bdois%5D=doi,creators,titles,descriptions,publisher,publicationYear,types,rightsList,citationCount,viewCount,downloadCount&include=client&page%5Bnumber%5D=1&page%5Bsize%5D=25&query=california&sort=relevance
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.7; +https://github.com/datacite/maremma)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Content-Type:
      - application/json;charset=UTF-8
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 24 Mar 2020 19:59:36 GMT
      Content-Type:
      - application/json; charset=utf-8
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Anonymous-Consumer:
      - 'true'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Vary:
      - Accept-Encoding, Origin
      X-Request-Id:
      - ef707be3-6410-4db2-bb1c-69265933958c
      Etag:
      - W/"f0dce2aa8b514a2e07c776d5a974fdc1"
      X-Runtime:
      - '0.290404'
      X-Powered-By:
      - Phusion Passenger 6.0.4
      Server:
      - nginx/1.14.0 + Phusion Passenger 6.0.4
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 24 Mar 2020 19:59:37 GMT
recorded_with: VCR 2.9.3
