---
http_interactions:
- request:
    method: get
    uri: https://api.test.datacite.org/dois?fields%5Bdois%5D=doi,creators,titles,descriptions,publisher,publicationYear,types,rightsList&include=client&page%5Bnumber%5D=1&page%5Bsize%5D=25&query=california&sort=relevance
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.5; +https://github.com/datacite/maremma)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Content-Type:
      - application/json;charset=UTF-8
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 10 Mar 2020 19:28:04 GMT
      Content-Type:
      - application/json; charset=utf-8
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Anonymous-Consumer:
      - 'true'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Vary:
      - Accept-Encoding, Origin
      X-Request-Id:
      - 8bbf7412-24d0-40d3-b9bc-b8e50b46312a
      Etag:
      - W/"ec223821cdf0a2cb4b3c8675754fa43c"
      X-Runtime:
      - '0.292988'
      X-Powered-By:
      - Phusion Passenger 6.0.4
      Server:
      - nginx/1.14.0 + Phusion Passenger 6.0.4
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 10 Mar 2020 19:28:04 GMT
recorded_with: VCR 2.9.3
