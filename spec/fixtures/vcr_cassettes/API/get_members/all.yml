---
http_interactions:
- request:
    method: get
    uri: https://api.test.datacite.org/members
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - http://search.local
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: ''
    headers:
      Access-Control-Allow-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      Access-Control-Allow-Methods:
      - GET, POST, PATCH, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/vnd.api+json; charset=utf-8
      Date:
      - Sat, 16 Dec 2017 15:40:31 GMT
      Etag:
      - W/"643ce1be95986acf2510a346920ecd91"
      Server:
      - openresty/1.11.2.2
      Status:
      - 200 OK
      Vary:
      - Accept-Encoding
      Via:
      - kong/0.10.3
      X-Anonymous-Consumer:
      - 'true'
      X-Kong-Proxy-Latency:
      - '0'
      X-Kong-Upstream-Latency:
      - '110'
      X-Powered-By:
      - Phusion Passenger 5.1.12
      X-Request-Id:
      - '0585e196-f3a0-4248-9d8c-ba9eb1346ded'
      X-Runtime:
      - '0.107647'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 16 Dec 2017 15:40:37 GMT
recorded_with: VCR 2.9.3
